.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Amon::Manual::Tutorial.ja 3"
.TH Amon::Manual::Tutorial.ja 3 "2010-04-03" "perl v5.12.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Amon::Manual::Tutorial.ja \- Amon \*(aeXX\*(aeXXe\*`XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.SH "a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX"
.IX Header "a~XXa~XXa~XXa~XXa~XXa~XXa~XX"
.SS "a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX"
.IX Subsection "a~XXa~XXa~XXa~XXa~XXa~XX"
a\*:XXa\*:XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*oXXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 5
\&  git clone git://github.com/tokuhirom/Amon.git
\&  cd Amon
\&  perl Makefile.PL
\&  make installdeps
\&  make install
.Ve
.SS "a\*~XXa\*~X\%a\*~XXa\*~XXa\*~XXa\*~XXa\*~XX"
.IX Subsection "a~XXa~Xa~XXa~XXa~XXa~XXa~XX"
a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXe\*'XXa\*oXXa\*~XXa\*:XX\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 2
\&  $ amon\-setup.pl Hello
\&  $ cd Hello
.Ve
.PP
e\*'XXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX\*(aeXXe\*'X\ a\*~XXa\*:XXa\*:XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXe\*'XXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX\*(aeXXe\*'X\ a\*~XXa\*~XXa\*~XX
.PP
.Vb 10
\&    Hello
\&    |\-\- Hello.psgi
\&    |\-\- Makefile.PL
\&    |\-\- lib
\&    |   |\-\- Hello
\&    |   |   |\-\- M
\&    |   |   |\-\- V
\&    |   |   |   |\-\- MT
\&    |   |   |   |   \`\-\- Context.pm
\&    |   |   |   \`\-\- MT.pm
\&    |   |   |\-\- Web
\&    |   |   |   |\-\- C
\&    |   |   |   |   \`\-\- Root.pm
\&    |   |   |   \`\-\- Dispatcher.pm
\&    |   |   \`\-\- Web.pm
\&    |   \`\-\- Hello.pm
\&    |\-\- t
\&    |   \`\-\- 01_root.t
\&    \`\-\- tmpl
\&        |\-\- base.mt
\&        \`\-\- index.mt
.Ve
.PP
Amon a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXe\*`XXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX plackup a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*oXXc\*,XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 2
\&  $ plackup Hello.psgi
\&  Plack::Server::Standalone: Accepting connections at http://0:5000/
.Ve
.PP
a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX http://localhost:5000/ a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXc\*,XXa\*oXXa\*~XXi\*:XX
.SS "\s-1DB\s0 a\*~XXa\*~XXe\*'XX\*(aeXX"
.IX Subsection "DB a~XXa~XXe'XXXX"
a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX \s-1RDBMS\s0 a\*~XXa\*~XXe\*'XX\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
a\*:XXa\*oXXa\*~XX \s-1RDBMS\s0 a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*:XXe\*`XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\%a\*~XXa\*oXXa\*~XX SQLite a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX SQLite a\*~XX Perl binding a\*~XXa\*~XXa\*~XX DBD::SQLite a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 1
\&    % sudo \-H cpan \-i DBD::SQLite
.Ve
.PP
\&\s-1SQL\s0 a\*~XX sql/sqlite.sql a\*:XXa\*:XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 1
\&    % mkdir sql
.Ve
.PP
sql/sqlite.sql a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*:XXa\*:XXa\*~XXa\*~XXa\*~XXa\*~XXa\*oXXa\*oXXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XX\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 7
\&    create table user (
\&        user_id int not null primary key,
\&        email varchar(255) not null,
\&        nick varchar(255) not null,
\&        password varchar(255) not null
\&    );
\&    create index email on user (email);
.Ve
.PP
a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXSQLite a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 1
\&    % sqlite3 hello.db < sql/sqlite.sql
.Ve
.PP
\&\*(aeXXa\*~XXa\*~XXO/R Mapper a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*:XXa\*oXXa\*~XX DBIx::Skinny a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*:XXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXAmon a\*~XXa\*~XX Data::Model a\*~XXa\*~XXa\*oXXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 2
\&    % sudo \-H cpan \-i DBIx::Skinny
\&    % sudo \-H cpan \-i DBIx::Skinny::Schema::Loader
.Ve
.PP
\&\*(aeXXa\*~XXa\*~XXDB a\*~XXa\*~XX \s-1ORM\s0 a\*~XXa\*~X\%a\*~XXa\*~XXa\*~XX\*(aeXXc\*,XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 2
\&    % mkdir lib/Hello/DB
\&    % perl \-MDBIx::Skinny::Schema::Loader=make_schema_at \-e \*(Aqprint make_schema_at("Hello::DB::Schema",{},["dbi:SQLite:hello.db"])\*(Aq > lib/Hello/DB/Schema.pm
.Ve
.PP
a\*~XXa\*~XXa\*~XXa\*~XXHello::DB a\*~XX\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*oXXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXa\*~XXa\*~XXa\*~XXc\*,XXa\*:XXc\*,XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 3
\&    package Hello::DB;
\&    use DBIx::Skinny;
\&    1;
.Ve
.SS "a\*:XXa\*oXXc\*,XXe\*'\s-1XX\s0"
.IX Subsection "a:XXaoXXc,XXe'XX"
a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*:XXa\*oXXc\*,XXe\*'XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*:XXa\*:XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX\*(aeXXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 2
\&    package Hello::Web::Dispatcher;
\&    use Amon::Web::Dispatcher::HTTPxDispatcher;
\&
\&    connect \*(Aq/\*(Aq => {controller => \*(AqRoot\*(Aq, action => \*(Aqindex\*(Aq};
\&    connect \*(Aq/signup\*(Aq => {controller => \*(AqRoot\*(Aq, action => \*(Aqsignup\*(Aq };
\&    connect \*(Aq/signup_thanks\*(Aq => {controller => \*(AqRoot\*(Aq, action => \*(Aqsignup_thanks\*(Aq };
\&    connect \*(Aq/login\*(Aq => {controller => \*(AqRoot\*(Aq, action => \*(Aqlogin\*(Aq };
\&    connect \*(Aq/post\*(Aq => {controller => \*(AqRoot\*(Aq, action => \*(Aqpost\*(Aq };
\&
\&    1;
.Ve
.PP
a\*~XXa\*~XXa\*~XXa\*~XXHTML a\*~XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*:XXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXc\*,XX\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX HTML::Shakan a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX \s-1CPAN\s0 a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 1
\&    % sudo \-H cpan HTML::Shakan
.Ve
.PP
\&\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XX lib/Hello/Form.pm a\*~XXa\*oXXc\*,XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 2
\&    package Hello::Form;
\&    use HTML::Shakan::Declare;
\&
\&    form \*(Aquser_add\*(Aq => (
\&        EmailField(
\&            name     => \*(Aqemail\*(Aq,
\&            required => 1,
\&        ),
\&        TextField(
\&            name     => \*(Aqnick\*(Aq,
\&            required => 1,
\&        ),
\&        PasswordField(
\&            name     => \*(Aqpassword\*(Aq,
\&            required => 1,
\&        ),
\&    );
\&
\&    form \*(Aqlogin\*(Aq => (
\&        EmailField(
\&            name     => \*(Aqemail\*(Aq,
\&            required => 1,
\&        ),
\&        PasswordField(
\&            name     => \*(Aqpassword\*(Aq,
\&            required => 1,
\&        ),
\&    );
\&
\&    1;
.Ve
.PP
a\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*oXXc\*,XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 3
\&    package Hello::Form::Renderer;
\&    use Any::Moose;
\&    use HTML::Shakan::Utils;
\&
\&    has \*(Aqid_tmpl\*(Aq => (
\&        is => \*(Aqro\*(Aq,
\&        isa => \*(AqStr\*(Aq,
\&        default => \*(Aqid_%s\*(Aq,
\&    );
\&
\&    sub render {
\&        my ($self, $form) = @_;
\&
\&        my @res;
\&        for my $field ($form\->fields) {
\&            unless ($field\->id) {
\&                $field\->id(sprintf($self\->id_tmpl(), $field\->{name}));
\&            }
\&            push @res, \*(Aq<p>\*(Aq;
\&            if ($field\->label) {
\&                push @res, sprintf( q{<label for="%s">%s</label>},
\&                    $field\->{id}, encode_entities( $field\->{label} ) );
\&            }
\&            push @res, \*(Aq<span class="inputbox">\*(Aq.$form\->widgets\->render( $form, $field )."</span></p>\en";
\&        }
\&        join \*(Aq\*(Aq, @res;
\&    }
\&
\&    no Any::Moose;
\&    _\|_PACKAGE_\|_\->meta\->make_immutable;
.Ve
.PP
\&\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XX Hello::Web a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXlib/Hello/Web.pm a\*~XXa\*:XXa\*:XXa\*~XXa\*~XXa\*~XXa\*~XX form a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*oXXc\*,XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXc\->form($form_name); a\*~XXa\*~XXa\*~XXa\*oXXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 12
\&    package Hello::Web;
\&    sub form {
\&        my ( $c, $form_name ) = @_;
\&        my $form = Hello::Form\->get(
\&            $form_name => (
\&                request => $c\->request,
\&                model   => HTML::Shakan::Model::DBIxSkinny\->new()
\&            )
\&        );
\&        $form\->load_function_message(\*(Aqen\*(Aq);
\&        return $form;
\&    }
.Ve
.PP
a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XXa\*oXXc\*,XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXc\*,XXe\*'XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
a\*~XXa\*~XXa\*~XXc\*,XXa\*oXXa\*~X\%a\*~XX
.PP
.Vb 9
\&    package Hello::Web::C::Root;
\&    sub signup {
\&        my $form = c\->form(\*(Aquser_add\*(Aq);
\&        if ($form\->submitted_and_valid) {
\&            $form\->model\->create(db() => \*(Aquser\*(Aq);
\&            return redirect(\*(Aq/signup_thanks\*(Aq);
\&        }
\&        return render("signup.mt", $form);
\&    }
\&
\&    sub signup_thanks { render(\*(Aqsignup_thanks.mt\*(Aq) }
.Ve
.PP
c\*,XXa\*oXXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*oXXc\*,XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXtmpl/signup.mt a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX\*(aeXX\*(aeXXe\*'XXa\*oXXa\*~XXa\*:XXa\*:XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXa\*~XXa\*~XX
.PP
.Vb 12
\&    <? if ($form\->submitted && $form\->has_error) { ?>
\&    <ul class="error">
\&    ?  for my $err ($form\->get_error_messages()) {
\&    <li><?= $err ?></li>
\&    ? }
\&    </ul>
\&    <? } ?>
\&    <h2 class="ttlLv2">Signup</h2>
\&    <form method="post" action="/signup">
\&    <?= encoded_string $form\->render() ?>
\&    <input type="submit" value="register" />
\&    </form>
.Ve
.PP
tmpl/signup_thanks.mt a\*~XXa\*:XXa\*:XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX\*(aeXXe\*`XXa\*~XX\*(aeXXa\*~XXe\*`XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXthx a\*~XX\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*:XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX\*(aeXX\*(aeXXa\*~XXa\*~XXWeb 2.0 a\*:XX\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX \s-1URL\s0 a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*:XXc\*,XXe\*'XXc\*,XX\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 1
\&    thanks!
.Ve
.SS "a\*~X\%a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX"
.IX Subsection "a~Xa~XXa~XXa~XXa~XXa~XXa~XXa~XXa~XX"
a\*:XXa\*oXXc\*,XXe\*'XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX\*(aeXXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XX\*(aeXXe\*`XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
a\*~X\%a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*oXXe\*`XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*:XXa\*oXXa\*~XXa\*~XXc\*,XX\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX Cookie a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 3
\&    _\|_PACKAGE_\|_\->load_plugins(
\&        \*(AqHTTPSession\*(Aq   => { state => \*(AqCookie\*(Aq, store => \*(AqFile\*(Aq },
\&    );
.Ve
.PP
a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXe\*`X\%c\*,XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXa\*oXXa\*oXXa\*oXX\*(aeXXa\*~XXlib/Hello/Form.pm a\*~XX\*(aeXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 11
\&    package Hello::Form;
\&    form \*(Aqlogin\*(Aq => (
\&        EmailField(
\&            name     => \*(Aqemail\*(Aq,
\&            required => 1,
\&        ),
\&        PasswordField(
\&            name     => \*(Aqpassword\*(Aq,
\&            required => 1,
\&        ),
\&    );
.Ve
.PP
a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XX\*(aeXXa\*oXXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\ a\*~XXe\*`X\%c\*,XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 5
\&    package Hello::Web::C::Root;
\&    sub index {
\&        my $login_form = c\->form(\*(Aqlogin\*(Aq);
\&        render("index.mt", $login_form);
\&    }
.Ve
.PP
\&\*(aeXXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XXc\*,XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*oXXc\*,XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 10
\&    package Hello::Web::C::Root;
\&    sub login {
\&        my $form = c\->form(\*(Aqlogin\*(Aq);
\&        if ($form\->submitted_and_valid) {
\&            my $user = db\->single(
\&                user => {
\&                    email    => $form\->param(\*(Aqemail\*(Aq),
\&                    password => $form\->param(\*(Aqpassword\*(Aq),
\&                }
\&            );
\&            if ($user) {
\&                c\->session\->set(\*(Aqlogin_user_id\*(Aq => $user\->user_id);
\&                return redirect(\*(Aq/\*(Aq);
\&            }
\&        }
\&        redirect(\*(Aq/?login_failed\*(Aq);
\&    }
.Ve
.PP
a\*~X\%a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~X\%a\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XXa\*~XX
.PP
.Vb 4
\&    sub logout {
\&        c\->session\->expire();
\&        redirect(\*(Aq/\*(Aq);
\&    }
.Ve
