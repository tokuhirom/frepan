# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

deactivate () {
    if [ -n "$_OLD_PL_PATH" ] ; then
        PATH="$_OLD_PL_PATH"
        export PATH
        unset _OLD_PL_PATH
    fi

    PERL5LIB="$_OLD_PL_PERL5LIB"
    export PERL5LIB
    unset _OLD_PL_PERL5LIB

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi

    if [ -n "$_OLD_PL_PS1" ] ; then
        PS1="$_OLD_PL_PS1"
        export PS1
        unset _OLD_PL_PS1
    fi

    unset PL_ENV
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
    fi
}

# unset irrelavent variables
deactivate nondestructive

PL_ENV=$(cd $(dirname $0)/..; pwd)
export PL_ENV

_OLD_PL_PATH="$PATH"
PATH="$PL_ENV/bin:$PATH"
export PATH

_OLD_PL_PS1="$PS1"
if [ "`basename \"$PL_ENV\"`" = "__" ] ; then
    # special case for Aspen magic directories
    # see http://www.zetadev.com/software/aspen/
    PS1="[`basename \`dirname \"$PL_ENV\"\``] $PS1"
else
    PS1="(`basename \"$PL_ENV\"`)$PS1"
fi
export PS1

_OLD_PL_PERL5LIB="$PERL5LIB"

/usr/local/app/perl-5.10.1/bin/perl -I$PL_ENV/lib/perl5/ -Mlocal::lib=$PL_ENV > $PL_ENV/bin/setup_local_lib
source $PL_ENV/bin/setup_local_lib

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi
