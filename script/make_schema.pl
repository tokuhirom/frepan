use strict;
use warnings;
use FindBin;
use File::Spec;
use lib File::Spec->catdir($FindBin::Bin, '..', 'lib');
use lib File::Spec->catdir($FindBin::Bin, '..', 'extlib', 'lib', 'perl5');
use FrePAN;
use FindBin;
use DBIx::Inspector 0.03;
use DBI;
use Text::Xslate;

my $c = FrePAN->bootstrap;
my $conf = $c->config->{'DB'};

my $dbh = DBI->connect(@$conf) or die "Cannot connect to DB: " . $DBI::errstr;
my $inspector = DBIx::Inspector->new(dbh => $dbh);
my $xslate = Text::Xslate->new(
    syntax => 'TTerse',
    module => ['Text::Xslate::Bridge::TT2Like'],
    type   => 'text',
);
my $tables = [
    map {
        +{
            name    => $_->name,
            pk      => join( ' ', map { $_->name } $_->primary_key ),
            columns => join( ' ', map { $_->name } $_->columns )
          }
      } $inspector->tables()
];
my $schema = $xslate->render_string(<<'...', {tables => $tables});
# XXX THIS FILE IS GENERATED BY script/make_schema.pl
package FrePAN::DB::Schema;
use strict;
use warnings;
use DBIx::Skinny::Schema;

[% FOR table IN tables %]
install_table '[% table.name %]' => sub {
%% IF table.pk
    pk      qw([% table.pk %]);
%% END
    columns qw([% table.columns %]);
};

[% END %]

use Module::Find ();
Module::Find::useall('FrePAN::DB');

1;
# XXX THIS FILE IS GENERATED BY script/make_schema.pl
...

my $dest = File::Spec->catfile($FindBin::Bin, '..', 'lib', 'FrePAN', 'DB', 'Schema.pm');
open my $fh, '>', $dest or die "cannot open file '$dest': $!";
print {$fh} $schema;
close $fh;
